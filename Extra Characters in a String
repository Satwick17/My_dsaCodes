/*
2707. Extra Characters in a String

You are given a 0-indexed string s and a dictionary of words dictionary. You have to break s into one or more non-overlapping substrings such that each substring is present in dictionary. There may be some extra characters in s which are not present in any of the substrings.

Return the minimum number of extra characters left over if you break up s optimally.

 

Example 1:

Input: s = "leetscode", dictionary = ["leet","code","leetcode"]
Output: 1
Explanation: We can break s in two substrings: "leet" from index 0 to 3 and "code" from index 5 to 8. There is only 1 unused character (at index 4), so we return 1.
*/


class Solution {
public:
    int solve(int ind, string &s, unordered_map<string, int>& mp, vector<int>& dp){
        if(ind >= s.size()) return 0;
        if(dp[ind] != -1)return dp[ind];
        string curStr ="";
        int ans = s.size();
        for(int cur = ind; cur<s.size(); cur++){
            curStr.push_back(s[cur]);

            int count = ((mp.count(curStr))? 0: curStr.size())+ solve(cur+1, s, mp, dp);
            ans = min(ans, count);
        }
        return dp[ind] = ans;
    }
    int minExtraChar(string s, vector<string>& dictionary) {
        vector<int> dp(s.size(), -1);
        unordered_map<string, int> mp;
        for(auto words:dictionary)
            mp[words]++;
        return solve(0, s, mp, dp);
    }
};
